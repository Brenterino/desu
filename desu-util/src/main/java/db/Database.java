/*
    This file is part of Desu: MapleStory v62 Server Emulator
    Copyright (C) 2017  Brenterino <therealspookster@gmail.com>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package db;

import com.mchange.v2.c3p0.ComboPooledDataSource;
import com.mchange.v2.c3p0.DataSources;
import java.sql.Connection;
import java.sql.SQLException;

/**
 * Represents a database object that gives out connections for use to
 * the service software.
 * 
 * @author Brent
 */
public class Database {

    static {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // touch the driver first
        } catch (Exception e) {
            System.err.println("SEVERE : SQL Driver has not been located during runtime. Please make sure it is in the correct path.");
            System.exit(0);
        }
    }
    
    private ComboPooledDataSource cSrc;
    
    private Database(String url, String user, String pass) throws SQLException {
        cSrc = new ComboPooledDataSource();
        cSrc.setJdbcUrl(url);
        cSrc.setUser(user);
        cSrc.setPassword(pass);
        cSrc.setIdleConnectionTestPeriod(1800); // try to check every 30 minutes, tune this later
    }
    
    /**
     * Gets a connection for use to the database.
     * 
     * @return a connection to the desired database.
     */
    public Connection getConnection() {
        try {
            return cSrc.getConnection();
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
    
    /**
     * Closes this database object.  This includes all
     * connections generated by this object.
     * 
     * @throws SQLException
     */
    public void close() throws SQLException {
        DataSources.destroy(cSrc);
    }
    
    public static Database createDatabase(String url, String user, String pass) {
        Database ret = null;
        try {
            ret = new Database(url, user, pass);
        } catch (Exception e) {
            System.out.println("[SEVERE] Unable to generate a Database object.  Check to make sure the driver is in the correct location and the required libraries are in your classpath as well.");
        }
        return ret;
    }
}
